window.SIDEBAR_ITEMS = {"constant":[["BABE_GENESIS_EPOCH_CONFIG","The BABE epoch configuration at genesis."],["MINER_MAX_ITERATIONS","Maximum number of iterations for balancing that will be executed in the embedded OCW miner of election provider multi phase."],["VERSION",""],["WASM_BINARY",""],["WASM_BINARY_BLOATY",""],["WEIGHT_PER_SECOND",""]],"enum":[["BalancesCall","Contains one variant per dispatchable that can be called by an extrinsic."],["Call",""],["DispatchClass","A generalized group of dispatch types."],["Event",""],["MultiSignature","Signature verify that can work with any known signature types.."],["OriginCaller",""],["StakerStatus","Indicates the initial status of the staker."],["SystemCall","Contains one variant per dispatchable that can be called by an extrinsic."],["TimestampCall","Contains one variant per dispatchable that can be called by an extrinsic."],["TransactionSource","The source of the transaction."]],"fn":[["native_version","The version information used to identify this runtime when compiled natively."]],"macro":[["construct_runtime","Construct a runtime, with the given name and the given pallets."],["create_runtime_str","Create a const [`RuntimeString`]."],["impl_opaque_keys","Implement `OpaqueKeys` for a described struct."],["parameter_types","Create new implementations of the `Get` trait."]],"mod":[["api",""],["constants","A set of constant values used in substrate runtime."],["generic","Generic implementations of Extrinsic/Header/Block."],["opaque",""]],"struct":[["AccountIdLookup","A lookup implementation returning the `AccountId` from a `MultiAddress`."],["ApprovalDeposit",""],["AsEnsureOriginWithArg",""],["AssetDeposit",""],["AttributeDepositBase",""],["BalanceToU256",""],["BasicDeposit",""],["BetterUnsignedThreshold",""],["BlakeTwo256","Blake2-256 Hash implementation."],["BlockExecutionWeight","Time to execute an empty block. Calculated by multiplying the Average with `1` and adding `0`."],["BlockHashCount",""],["BondingDuration",""],["Burn",""],["CheckDelay",""],["CheckPeriod",""],["CollectionDeposit",""],["ConstU128","Const getter for a basic type."],["ConstU16","Const getter for a basic type."],["ConstU32","Const getter for a basic type."],["ConstU64","Const getter for a basic type."],["ConstU8","Const getter for a basic type."],["ConstantMultiplier","Implementor of [`WeightToFee`] that uses a constant multiplier."],["ConvertInto","A structure that performs standard conversion using the standard Rust conversion traits."],["CooloffPeriod",""],["CouncilMaxMembers",""],["CouncilMaxProposals",""],["CouncilMotionDuration",""],["DataDepositPerByte",""],["Delay",""],["DepositPerByte",""],["DontAllowCollectiveAndDemocracy",""],["EitherOfDiverse","“OR gate” implementation of `EnsureOrigin` allowing for different `Success` types for `L` and `R`, with them combined using an `Either` type."],["ElectionProviderBenchmarkConfig","The numbers configured here could always be more than the the maximum limits of staking pallet to ensure election snapshot will not run out of memory. For now, we set them to smaller values since the staking is bounded and the weight pipeline takes hours for this single pallet."],["EnactmentPeriod",""],["EpochDuration",""],["EqualPrivilegeOnly","Implementation of [`PrivilegeCmp`] that only checks for equal origins."],["ExpectedBlockTime",""],["ExtrinsicBaseWeight","Time to execute a NO-OP extrinsic, for example `System::remark`. Calculated by multiplying the Average with `1` and adding `0`."],["FastTrackVotingPeriod",""],["FeesAccount",""],["FieldDeposit",""],["FundThreshold",""],["GenesisConfig",""],["HousingFundPalletId",""],["IdentityFee","Implementor of `WeightToFee` that maps one unit of weight to one unit of fee."],["ImOnlineUnsignedPriority",""],["InvestorVoteAmount",""],["ItemDeposit",""],["KeyLimit",""],["LaunchPeriod",""],["MaxAdditionalFields",""],["MaxApprovals",""],["MaxAuthorities",""],["MaxElectingVoters",""],["MaxFundContribution",""],["MaxInvestorPerHouse",""],["MaxKeys",""],["MaxMembers",""],["MaxNominations",""],["MaxNominatorRewardedPerValidator",""],["MaxPeerDataEncodingSize",""],["MaxPeerInHeartbeats",""],["MaxProposals",""],["MaxRegistrars",""],["MaxSubAccounts",""],["MaximumReasonLength",""],["MaximumSchedulerWeight",""],["MetadataDepositBase",""],["MetadataDepositPerByte",""],["MinContribution",""],["MinPointsToBalance",""],["MinerMaxLength",""],["MinerMaxWeight",""],["MinimumDeposit",""],["MultiPhaseUnsignedPriority",""],["NoPreimagePostponement",""],["NominationPoolsPalletId",""],["NposSolution16",""],["OffchainRandomBalancing","A source of random balance for NposSolver, which is meant to be run by the OCW election miner."],["OffchainRepeat",""],["OffendingValidatorsThreshold",""],["OnChainSeqPhragmen",""],["Origin","The runtime origin type representing the origin of a call."],["PalletId","A pallet identifier. These are per pallet and should be stored in a registry somewhere."],["PalletInfo","Provides an implementation of `PalletInfo` to provide information about the pallet setup in the runtime."],["Perbill","A fixed point representation of a number in the range [0, 1]."],["Percent","A fixed point representation of a number in the range [0, 1]."],["Permill","A fixed point representation of a number in the range [0, 1]."],["Perquintill","A fixed point representation of a number in the range [0, 1]."],["PiecewiseLinear","Piecewise Linear function in [0, 1] -> [0, 1]."],["PostUnbondPoolsWindow",""],["PreimageBaseDeposit",""],["PreimageByteDeposit",""],["PreimageMaxSize",""],["ProposalBond",""],["ProposalBondMinimum",""],["ProposalFee",""],["ReportLongevity",""],["ReserveCollectionIdUpTo",""],["RewardCurve",""],["RocksDbWeight","By default, Substrate uses RocksDB, so this will be the weight used throughout the runtime."],["Runtime",""],["RuntimeApi",""],["RuntimeApiImpl","Implements all runtime apis for the client side."],["RuntimeBlockLength",""],["RuntimeBlockWeights",""],["SessionsPerEra",""],["SignedDepositBase",""],["SignedDepositByte",""],["SignedPhase",""],["SignedRewardBase",""],["SlashDeferDuration",""],["SpendPeriod",""],["StakingBenchmarkingConfig",""],["StakingUnsignedPriority","We prioritize im-online heartbeats over election solution submission."],["StorageInfo","Metadata about storage from the runtime."],["StringLimit",""],["SubAccountDeposit",""],["TipCountdown",""],["TipFindersFee",""],["TipReportDepositBase",""],["TreasuryPalletId",""],["U128CurrencyToVote","An implementation of `CurrencyToVote` tailored for chain’s that have a balance type of u128."],["U256ToBalance",""],["UncleGenerations",""],["UnsignedPhase",""],["ValueLimit",""],["Version",""],["VotingPeriod",""]],"trait":[["BlockT","Something which fulfills the abstract idea of a Substrate block. It has types for `Extrinsic` pieces of information as well as a `Header`."],["BuildStorage","Complex storage builder stuff."],["Contains","A trait for querying whether a type can be said to “contain” a value."],["Extrinsic","Something that acts like an `Extrinsic`."],["FixedPointNumber","Something that implements a decimal fixed point number."],["Get","A trait for querying a single value from a type."],["IdentifyAccount","Some type that is able to be collapsed into an account ID. It is not possible to recreate the original value from the account ID."],["KeyOwnerProofSystem","Something which can compute and check proofs of a historical key owner and return full identification data of that key owner."],["NftPermission",""],["OpaqueKeys","Opaque data type that may be destructured into a series of raw byte slices (which represent individual keys)."],["Randomness","A trait that is able to provide randomness."],["SaturatedConversion","Convenience type to work around the highly unergonomic syntax needed to invoke the functions of overloaded generic traits, in this case `SaturatedFrom` and `SaturatedInto`."],["StaticLookup","Means of changing one type into another in a manner dependent on the source type. This variant is different to `Lookup` in that it doesn’t (can cannot) require any context."],["StorageValue","A trait for working with macro-generated storage values under the substrate storage API."],["Verify","Means of signature verification."]],"type":[["Acc",""],["AccountId","Some way of identifying an account on the chain. We intentionally make it equivalent to the public key of our transaction signing scheme."],["AccountIndex","The type for looking up accounts. We don’t expect more than 4 billion of them."],["Address","The address format for describing accounts."],["AllPallets","All pallets included in the runtime as a nested tuple of types."],["AllPalletsReversedWithSystemFirst","All pallets included in the runtime as a nested tuple of types in reversed order. With the system pallet first."],["AllPalletsWithSystem","All pallets included in the runtime as a nested tuple of types."],["AllPalletsWithSystemReversed","All pallets included in the runtime as a nested tuple of types in reversed order."],["AllPalletsWithoutSystem","All pallets included in the runtime as a nested tuple of types. Excludes the System pallet."],["AllPalletsWithoutSystemReversed","All pallets included in the runtime as a nested tuple of types in reversed order. Excludes the System pallet."],["ApplyExtrinsicResult","The result of applying of an extrinsic."],["Assets",""],["AssetsConfig",""],["AuthorityDiscovery",""],["AuthorityDiscoveryConfig",""],["Authorship",""],["Babe",""],["BabeConfig",""],["Balance","Balance of an account."],["Balances",""],["BalancesConfig",""],["Block","Block type as expected by this runtime."],["BlockNumber","An index to a block."],["CheckedExtrinsic","Extrinsic type that has already been checked."],["CollectionId","NFT Collection ID"],["Council",""],["CouncilConfig",""],["Democracy",""],["DemocracyConfig",""],["ElectionProviderMultiPhase",""],["Executive","Executive: handles dispatch to the various modules."],["Grandpa",""],["GrandpaConfig",""],["Hash","A hash of some data used by the chain."],["Header","Block header type as expected by this runtime."],["Historical",""],["HousingFundModule",""],["Identity",""],["ImOnline",""],["ImOnlineConfig",""],["Index","Index of a transaction in the chain."],["ItemId","NFT Item ID"],["Mmr",""],["Moment","Type used for expressing timestamp."],["NftModule",""],["NftModuleConfig",""],["NominationPools",""],["NominationPoolsConfig",""],["NumberFor","Extract the number type for a block."],["Offences",""],["OnboardingModule",""],["Preimage",""],["RandomnessCollectiveFlip",""],["RoleModule",""],["RoleModuleConfig",""],["Scheduler",""],["Session",""],["SessionConfig",""],["ShareDistributor",""],["Signature","Alias to 512-bit hash when used in the context of a transaction signature on the chain."],["SignedExtra","The SignedExtension to the basic transaction logic."],["SignedPayload","The payload being signed in transactions."],["Staking",""],["StakingConfig",""],["Sudo",""],["SudoConfig",""],["System",""],["SystemConfig",""],["Timestamp",""],["TransactionPayment",""],["TransactionPaymentConfig",""],["TransactionPriority","Priority for a transaction. Additive. Higher is better."],["TransactionValidity","Information on a transaction’s validity and, if valid, on how it relates to other transactions."],["Treasury",""],["TreasuryConfig",""],["UncheckedExtrinsic","Unchecked extrinsic type as expected by this runtime."],["Uniques",""],["Utility",""],["VotingModule",""],["Weight","Numeric range of a transaction weight."]]};