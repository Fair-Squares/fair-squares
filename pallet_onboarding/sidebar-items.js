window.SIDEBAR_ITEMS = {"attr":[["transactional","Execute the annotated function in a new storage transaction."]],"derive":[["Decode","Derive `parity_scale_codec::Decode` and for struct and enum."],["Encode","Derive `parity_scale_codec::Encode` and `parity_scale_codec::EncodeLike` for struct and enum."]],"enum":[["AssetStatus",""],["BalanceStatus","Status of funds."],["DispatchError","Reason why a dispatch call failed."],["ExistenceRequirement","Simple boolean for whether an account needs to be kept in existence."],["RawOrigin","Origin for the System pallet."]],"fn":[["ensure_none","Ensure that the origin `o` represents an unsigned extrinsic. Returns `Ok` or an `Err` otherwise."],["ensure_root","Ensure that the origin `o` represents the root. Returns `Ok` or an `Err` otherwise."],["ensure_signed","Ensure that the origin `o` represents a signed extrinsic (i.e. transaction). Returns `Ok` with the account that signed the extrinsic or an `Err` otherwise."],["ensure_signed_or_root","Ensure that the origin `o` represents either a signed extrinsic (i.e. transaction) or the root. Returns `Ok` with the account that signed the extrinsic, `None` if it was root,  or an `Err` otherwise."]],"macro":[["ensure","Evaluate `$x:expr` and if not true return `Err($y:expr)`."]],"mod":[["pallet","The module that hosts all the FRAME types needed to add this pallet to a runtime."],["weights","Autogenerated weights for pallet_template"]],"struct":[["Asset",""],["BoundedVec","A bounded vector."],["Box","A pointer type for heap allocation."],["Vec","A contiguous growable array type, written as `Vec<T>`, short for ‘vector’."],["VotingCalls",""]],"trait":[["AccountIdConversion","This type can be converted into and possibly from an AccountId (which itself is generic)."],["AtLeast32BitUnsigned","A meta trait for arithmetic.  Same as [`AtLeast32Bit `], but also bounded to be unsigned."],["Create","Trait for providing the ability to create collections of nonfungible items."],["Currency","Abstraction over a fungible assets system."],["Decode","Trait that allows zero-copy read of value-references from slices in LE format."],["Destroy","Trait for providing the ability to destroy collections of nonfungible items."],["Dispatchable","A lazy call (module function and argument values) that can be executed via its `dispatch` method."],["Encode","Trait that allows zero-copy write of value-references to slices in LE format."],["EncodeLike","A marker trait that tells the compiler that a type encode to the same representation as another type."],["Get","A trait for querying a single value from a type."],["HasCompact","Trait that tells you if a given type can be encoded/decoded in a compact way."],["Inspect","Trait for providing an interface to many read-only NFT-like sets of items."],["InspectEnumerable","Interface for enumerating items in existence or owned by a given account over many collections of NFTs."],["Mutate","Trait for providing an interface for multiple collections of NFT-like items which may be minted, burned and/or have attributes set on them."],["ReservableCurrency","A currency where funds can be reserved from the user."],["Saturating","Saturating arithmetic operations, returning maximum or minimum values instead of overflowing."],["StaticLookup","Means of changing one type into another in a manner dependent on the source type. This variant is different to `Lookup` in that it doesn’t (can cannot) require any context."],["Transfer","Trait for providing a non-fungible sets of items which can only be transferred."],["Zero","Defines an additive identity element for `Self`."]],"type":[["BalanceOf",""],["BlockNumberFor","Type alias for the `BlockNumber` associated type of system config."],["BlockNumberOf",""],["CallOf",""],["DispatchResult","Unaugmented version of `DispatchResultWithPostInfo` that can be returned from dispatchable functions and is automatically converted to the augmented type. Should be used whenever the `PostDispatchInfo` does not need to be overwritten. As this should be the common case it is the implicit return type when none is specified."],["ItemInfoOf",""],["NftCollectionOf",""],["OriginFor","Type alias for the `Origin` associated type of system config."]]};